USEFUL COMMANDS

go build main.go

docker build -t marioscrock/jaeger-agent .

cd /Users/Mario/eclipse-workspace/jaeger-java-collector
docker build -t marioscrock/jaeger-java-collector .

BUILD HOTROD IMAGES
cd $GOPATH/src
docker build --file github.com/MakeRequests/Dockerfile --no-cache -t marioscrock/hotrod .

docker swarm init
docker stack deploy -c jaeger-docker-compose.yml <service-name>

docker stack rm <service-name>
docker swarm leave --force

REFER to HOST IP ADDRESS (Not working on if Linux host)
host.docker.internal

MULTIPLE INSTANCES
docker-compose -f hotrod-docker-compose.yml -p hotrod1 up

export [variable-name]=value
unset [variabe-name]

${FIX_ROUTE_WORKER_POOL_SIZE:---fix-route-worker-pool-size=1000}
${FIX_ROUTE_CALC_DELAY:---fix-route-calc-delay=1ms}
${FIX_DB_QUERY_DELAY:---fix-db-query-delay=1ms}
${FIX_DISABLE_DB_CONN_MUTEX:---fix-disable-db-conn-mutex}
${FIX_REDIS_GET_DELAY:---fix-redis-get-delay=1ms}
${FIX_REDIS_FIND_DELAY:---fix-redis-find-delay=1ms}

HOST_PORT_FRONTEND=8081 TELEGRAM_CONF_FILE=".etc/telegraf/others" docker-compose -f hotrod-docker-compose.yml -p hotrod2 up

cd /Users/Mario/eclipse-workspace/kaiju-collector/jaeger  
docker-compose -f jaeger-docker-compose.yml up

cd $GOPATH/src/github.com/MakeRequests
docker-compose -f hotrod-docker-compose.yml up

REMOVE intermediate images for multi-stage builds
docker rmi $(docker images | grep "^<none>" | awk "{print $3}") [--force]

REMOVE all CONTAINERS
docker rm `docker ps --no-trunc -aq`

BASH
docker exec -it <containerIdOrName> bash

DETACHED DOCKER-COMPOSE
docker-compose up -d
docker logs -t -f <container-name>

PYTHON
cd /Applications/Python\ 3.5/IDLE.app/Contents/MacOS && ./Python /Users/Mario/eclipse-workspace/kaiju-collector/jupyter/jaegerTiming.py & ./Python /Users/Mario/eclipse-workspace/kaiju-collector/jupyter/kaijuTiming.py


JUPYTER
cd /Users/Mario/eclipse-workspace/kaiju-collector/jupyter
docker run --rm -p 10000:8888 -e JUPYTER_LAB_ENABLE=yes -v "$PWD":/home/jovyan/work jupyter/datascience-notebook:e5c5a7d3e52d

HOTROD
mkdir -p $GOPATH/src/github.com/jaegertracing
cd $GOPATH/src/github.com/jaegertracing
git clone git@github.com:jaegertracing/jaeger.git jaeger
cd jaeger
make install
cd examples/hotrod
go run ./main.go all

STATIK
cd Path/To/ServiceUsingStatikFolder
statik -src=/path/to/your/project/public

GO BINDATA
cd /Users/Mario/go/src/github.com/jaegertracing/jaeger/examples/hotrod/services/frontend/
cd /Users/Mario/go/src/github.com/MakeRequests/services/frontend
go-bindata-assetfs -ignore web_assets/.DS_Store -pkg frontend -o bindata_assetfs.go web_assets/...

ALL IN
docker run -d -p6831:6831/udp -p16686:16686 jaegertracing/all-in-one:latest

JAEGER
Can ask more than 1500 traces simply changing directly limit in the URL, check only in UI

INFLUX
docker exec -it tik_influxdb_1 influx --precision rfc3339
show databases
use telegraf
show measurements
docker-compose down --volumes

METRICS
JAEGER AGENT spans submitted -> http://localhost:5778/metrics
JAEGER COLLECTOR spans dropped -> http://localhost:14268/metrics

PREVIOUS DOCKER FILE - FOR JAEGER AGENT - VERSION

# RUN only
#FROM iron/go
#EXPOSE 5775/udp 6831/udp 6832/udp 5778
#WORKDIR /app
# Now just add the binary
#COPY main /app/
#ENTRYPOINT ["./main"] # --collector.host-port=jaeger-collector:14267"]

# CROSS-COMPILE IMAGE
#FROM iron/go:dev
#EXPOSE 5775/udp 6831/udp 6832/udp 5778
#WORKDIR /app
# Set an env var that matches your path
#ENV SRC_DIR=/go/src/github.com/jaegertracing/jaeger/
# Add the source code:
#ADD jaeger/ $SRC_DIR
# Build it:
#RUN cd $SRC_DIR; cd cmd/agent/; go build main.go; cp main /app/
#ENTRYPOINT ["./main"]

DOCKER-COMPOSE 
jaeger-java-collector:
      image: marioscrock/jaeger-java-collector
      command: ["java","-jar","/usr/app/jaeger-0.0.1-SNAPSHOT-jar-with-dependencies.jar"]
      ports:
        - "2042:2042" 
        - "4567:4567"
      restart: on-failure
      depends_on:
        - jaeger-agent
