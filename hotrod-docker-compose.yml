version: '3'

services:
    hotrod-frontend:
      image: marioscrock/hotrod-jaeger-agent:latest #marioscrock/hotrod:latest
      environment:
        JAEGERAGENT: "--collector.host-port=jaeger-collector:14267 --processor.jaeger-compact.server-queue-size=300000" #To avoid dropping spans
        HOTROD: "--jaeger-agent.host-port=hotrod-frontend:6831 --fix-route-worker-pool-size=1000 frontend"
      command: sh run.sh
      ports:
        - "8080:8080"
      networks:
        - hotrod-net
        - jaeger_jaeger-net
      restart: on-failure

    hotrod-route:
      image: marioscrock/hotrod-jaeger-agent:latest #marioscrock/hotrod:latest
      environment:
        JAEGERAGENT: "--collector.host-port=jaeger-collector:14267 --processor.jaeger-compact.server-queue-size=300000" #To avoid dropping spans
        HOTROD: "--jaeger-agent.host-port=hotrod-route:6831 --fix-route-calc-delay=1ms route"
      command: sh run.sh
      # ports:
      #   - "8083:8083"
      restart: on-failure
      networks:
        - hotrod-net
        - jaeger_jaeger-net
      depends_on:
        - hotrod-frontend

    hotrod-customer:
      image: marioscrock/hotrod-jaeger-agent:latest #marioscrock/hotrod:latest
      environment:
        JAEGERAGENT: "--collector.host-port=jaeger-collector:14267 --processor.jaeger-compact.server-queue-size=300000" #To avoid dropping spans
        HOTROD: "--jaeger-agent.host-port=hotrod-customer:6831 --fix-db-query-delay=1ms --fix-disable-db-conn-mutex customer"
      command: sh run.sh
      # ports:
      #   - "8081:8081"
      restart: on-failure
      networks:
        - hotrod-net
        - jaeger_jaeger-net
      depends_on:
        - hotrod-frontend

    hotrod-driver:
      image: marioscrock/hotrod-jaeger-agent:latest #marioscrock/hotrod:latest
      environment:
        JAEGERAGENT: "--collector.host-port=jaeger-collector:14267 --processor.jaeger-compact.server-queue-size=300000" #To avoid dropping spans
        HOTROD: "--jaeger-agent.host-port=hotrod-driver:6831 --fix-redis-get-delay=1ms --fix-redis-find-delay=1ms driver"
      command: sh run.sh
      # ports:
      #   - "8082:8082"
      restart: on-failure
      networks:
        - hotrod-net
        - jaeger_jaeger-net
      depends_on:
        - hotrod-frontend

    telegraf:
      image: "telegraf:latest"
      networks:
        - hotrod-net
        - jaeger_jaeger-net
      volumes:
        - ./etc/telegraf:/etc/telegraf
        #To enable [inputs.docker] within a container
        - /var/run/docker.sock:/var/run/docker.sock

networks:
  hotrod-net:
    driver: bridge
  jaeger_jaeger-net:
    external: true